// The Android Gradle Plugin builds the native code with the Android NDK.

group 'com.novice.flutter_camera_calibration'
version '1.0'

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // The Android Gradle Plugin knows how to build native code with the NDK.
        classpath 'com.android.tools.build:gradle:7.3.0'
    }
}

rootProject.allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    if (project.android.hasProperty("namespace")) {
        namespace 'com.novice.flutter_camera_calibration'
    }

    // Bumping the plugin compileSdkVersion requires all clients of this plugin
    // to bump the version in their app.
    compileSdkVersion 33

    // Bumping the plugin ndkVersion requires all clients of this plugin to bump
    // the version in their app and to download a newer version of the NDK.
    ndkVersion "23.1.7779620"

    // Invoke the shared CMake build with the Android Gradle Plugin.
//    externalNativeBuild {
//        cmake {
//            path "../src/CMakeLists.txt"
//
//            // The default CMake version for the Android Gradle Plugin is 3.10.2.
//            // https://developer.android.com/studio/projects/install-ndk#vanilla_cmake
//            //
//            // The Flutter tooling requires that developers have CMake 3.10 or later
//            // installed. You should not increase this version, as doing so will cause
//            // the plugin to fail to compile for some customers of the plugin.
//            // version "3.10.2"
//        }
//    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        minSdkVersion 19
        externalNativeBuild {
            cmake {
                cppFlags '-frtti -fexceptions -std=c++11'
                arguments "-DANDROID_STL=c++_shared"
            }
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    packagingOptions {
        pickFirst '**/libopencv_java4.so'
    }

    // https://docs.flutter.dev/deployment/android#build-an-app-bundle
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'arm64-v8a', 'x86_64'
            universalApk false
        }
    }

}
